generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model FileUpload {
  id            String @id @default(uuid())
  fileName      String
  contentLength Int
  contentType   String
  url           String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  CatalogProduct CatalogProduct[]
  Carousel       Carousel[]

  @@map("file_upload")
}

model EmailConfirmation {
  id    String @id @default(uuid())
  email String
  token String @unique

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("email_confirmation")
}

model User {
  id        String  @id @default(uuid())
  name      String
  email     String  @unique
  password  String
  token     String
  validated Boolean

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model CatalogProduct {
  id          String   @id @default(uuid())
  description String
  alt         String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  FileUpload   FileUpload? @relation(fields: [fileUploadId], references: [id])
  fileUploadId String?

  @@map("catalog_product")
}

model Carousel {
  id          String @id @default(uuid())
  description String
  alt         String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  FileUpload   FileUpload? @relation(fields: [fileUploadId], references: [id])
  fileUploadId String?

  @@map("carousel")
}
